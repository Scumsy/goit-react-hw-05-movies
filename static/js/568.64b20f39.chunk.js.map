{"version":3,"file":"static/js/568.64b20f39.chunk.js","mappings":"+SAGaA,EAAYC,EAAAA,GAAAA,IAAH,+HAOTC,EAASD,EAAAA,GAAAA,IAAH,iEAKNE,EAAeF,EAAAA,GAAAA,IAAH,kIAUZG,EAAcH,EAAAA,GAAAA,IAAH,qJAQXI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,+CAIRM,EAAWN,EAAAA,GAAAA,GAAH,6C,SCzBRO,EAAY,SAAC,GAAc,IAAD,YAAXC,EAAW,EAAXA,KACpBC,EAASD,EAAKE,GACdC,GAAWC,EAAAA,EAAAA,MAGjB,OAFAC,QAAQC,IAAIN,IAGV,6BACE,UAAC,KAAD,CAAMO,GAAE,iBAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAUK,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAnC,WACE,SAAC,MAAD,IADF,cAIA,UAAClB,EAAD,YACE,SAACE,EAAD,CACEiB,IAAG,yCAAoCV,EAAKW,aAC5CC,IAAI,MAGN,4BACE,0BACGZ,EAAKa,MADR,IACgBb,EAAKc,aAAaC,MAAM,EAAG,GAD3C,QAGA,wCAAgBC,KAAKC,MAA0B,GAApBjB,EAAKkB,cAAhC,QACA,sCACA,uBAAIlB,EAAKmB,YACT,oCACA,SAACzB,EAAD,UACGM,EAAKoB,OAAOC,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,KAAP,OACf,uBAAaA,GAALpB,EADO,aAOvB,UAACP,EAAD,YACE,oDACA,UAACG,EAAD,YACE,yBACE,SAACF,EAAD,CACEW,GAAE,kBAAaN,EAAb,SACFO,MAAO,CAAEC,KAAI,iBAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAUK,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAF1C,qBAOF,yBACE,SAAC,KAAD,CACEF,GAAE,kBAAaN,EAAb,YACFO,MAAO,CAAEC,KAAI,iBAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAUK,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAF1C,8BAUN,SAAC,KAAD,MAGL,EChEc,SAASc,IACtB,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAO1B,EAAP,KAAa2B,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAgBL,GAFvC,OAEUxB,EAFV,OAGI2B,EAAQ3B,GAHZ,gDAKI8B,EAAAA,GAAAA,MAAY,iDAAkD,CAC5DC,SAAU,eANhB,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACR,KAGF,gCACGxB,IAAQ,SAACD,EAAD,CAAWC,KAAMA,KAC1B,SAAC,KAAD,CAAgBiC,UAAW,QAGhC,C","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n\n  box-shadow: 0px -4px 4px -4px rgba(34, 60, 80, 0.4) inset;\n  margin-top: 20px;\n`;\n\nexport const Poster = styled.img`\n  height: 300px;\n  margin-right: 20px;\n`;\n\nexport const GenreWrapper = styled.div`\n  display: flex;\n  p:not(:last-child) {\n    margin-right: 20px;\n  }\n  p {\n    margin-top: 0px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  box-shadow: 0px -4px 4px -4px rgba(34, 60, 80, 0.4) inset;\n  padding-bottom: 4px;\n  li {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const CastLink = styled(NavLink)`\n  margin-right: 20px;\n`;\n\nexport const InfoList = styled.ul`\n  list-style: none;\n`;\n","import { Link, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { HiArrowSmLeft } from 'react-icons/hi';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Poster,\n  GenreWrapper,\n  InfoWrapper,\n  CastLink,\n  InfoList,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({ item }) => {\n  const filmId = item.id;\n  const location = useLocation();\n  console.log(item);\n\n  return (\n    <main>\n      <Link to={location?.state?.from ?? '/'}>\n        <HiArrowSmLeft />\n        Go back\n      </Link>\n      <Container>\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\n          alt=\"\"\n        />\n\n        <div>\n          <h2>\n            {item.title}({item.release_date.slice(0, 4)})\n          </h2>\n          <p>User score: {Math.round(item.vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{item.overview}</p>\n          <h3>Genres</h3>\n          <GenreWrapper>\n            {item.genres.map(({ id, name }) => (\n              <p key={id}>{name}</p>\n            ))}\n          </GenreWrapper>\n        </div>\n      </Container>\n\n      <InfoWrapper>\n        <h3>Additional information</h3>\n        <InfoList>\n          <li>\n            <CastLink\n              to={`/movies/${filmId}/cast`}\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Cast\n            </CastLink>\n          </li>\n          <li>\n            <NavLink\n              to={`/movies/${filmId}/reviews`}\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </InfoList>\n      </InfoWrapper>\n\n      <Outlet />\n    </main>\n  );\n};\n\nMovieCard.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getMovieDetails } from '../MoviesAPI/GetMovies';\nimport { MovieCard } from '../MovieCard/MovieCard';\n\nexport default function MovieDetailsContainer() {\n  const { itemId } = useParams();\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    async function fetchItem() {\n      try {\n        const item = await getMovieDetails(itemId);\n        setItem(item);\n      } catch (error) {\n        toast.error('Something went wrong. Please, reload the page.', {\n          position: 'top-center',\n        });\n      }\n    }\n    fetchItem();\n  }, [itemId]);\n\n  return (\n    <>\n      {item && <MovieCard item={item} />}\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\n"],"names":["Container","styled","Poster","GenreWrapper","InfoWrapper","CastLink","NavLink","InfoList","MovieCard","item","filmId","id","location","useLocation","console","log","to","state","from","src","poster_path","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","name","MovieDetailsContainer","itemId","useParams","useState","setItem","useEffect","getMovieDetails","toast","position","fetchItem","autoClose"],"sourceRoot":""}